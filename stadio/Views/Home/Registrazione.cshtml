@model stadio.Models.Utente

@{
    ViewBag.Title = "Registrazione";
}

<br /><br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal" align="center">
    <h4>Registrazione</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group" style="width:50%" align="center">
        @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" align="center">
            @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="width:50%" align="center">
        @Html.LabelFor(model => model.cognome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" align="center">
            @Html.EditorFor(model => model.cognome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cognome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="width:50%" align="center">
        @Html.LabelFor(model => model.sesso, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" align="center">
            Maschio
            @Html.RadioButtonFor(model => model.sesso, "M")<br />
            Femmina
            @Html.RadioButtonFor(model => model.sesso, "F")<br />
            @Html.ValidationMessageFor(model => model.sesso, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group" style="width:50%" align="center">
            @Html.LabelFor(model => model.dataNascita, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" align="center">
                @Html.EditorFor(model => model.dataNascita)
                <br />
                @Html.ValidationMessageFor(model => model.dataNascita, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="width:50%" align="center">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" align="center">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                <br />
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="width:50%" align="center">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" align="center">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="width:50%" align="center">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Registrati" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
